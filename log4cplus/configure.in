dnl Process this file with autoconf to produce a configure script.
AC_INIT([log4cplus],[1.0.3])
AC_CONFIG_SRCDIR([src/logger.cxx])
AM_INIT_AUTOMAKE([gnu -Wall])

#
# +1 : ? : +1  == new interface that does not break old one
# +1 : ? : 0   == new interfac that breaks old one
#  ? : ? : 0   == no new interfaces, but breaks apps
#  ? :+1 : ?   == just some internal changes, nothing breaks but might work
#                 better
# CURRENT : REVISION : AGE
LT_VERSION=2:1:0
AC_SUBST(LT_VERSION)

AC_PROG_LIBTOOL

dnl Checks for programs.
AC_SEARCH_LIBS([strerror],[cposix])

dnl first check for c/c++ compilers
AC_PROG_CXX
AC_PROG_CXXCPP
AC_LANG([C++])
AX_CXXFLAGS_WARN_ALL
AC_CXX_COMPILER_VENDOR([ac_cxx_compiler_vendor])
AS_CASE([$ac_cxx_compiler_vendor], [gnu], 
  [AX_CXXFLAGS_GCC_OPTION([-Wextra])
  AX_CXXFLAGS_GCC_OPTION([-O2])])

dnl Checks for libraries.
AC_PROG_RANLIB
AC_CHECK_LIB(rt, nanosleep)
dnl AC_CHECK_LIB(socket, accept)
dnl AC_CHECK_LIB(nsl, gethostent)
AC_CHECK_FUNC(gethostent, , AC_CHECK_LIB(nsl, gethostent))
AC_CHECK_FUNC(setsockopt, , AC_CHECK_LIB(socket, setsockopt))

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([strstream.h strstream sstream syslog.h netinet/in.h])

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_STRFTIME
AC_STRUCT_TM
AC_CHECK_FUNCS([gmtime_r])
AC_CHECK_FUNCS([localtime_r])
AC_CHECK_FUNCS([gettimeofday])
AC_CHECK_FUNCS([ftime])
AC_CHECK_FUNCS([stat])
AC_CHECK_FUNCS([lstat])
AC_CHECK_FUNCS([htons])
AC_CHECK_FUNCS([ntohs])
AC_CHECK_FUNCS([htonl])
AC_CHECK_FUNCS([ntohl])

dnl Check for the existance of type socklen_t.
TYPE_SOCKLEN_T


dnl Sane locale?

AH_TEMPLATE([LOG4CPLUS_WORKING_LOCALE],
  [Define for compilers/standard libraries that support more than
   just the "C" locale.])

AC_ARG_WITH([working-locale],
  [AS_HELP_STRING([--with-working-locale],
    [Use std::locale for char->wchar_t conversion.])],
  [with_working_locale=yes],
  [with_working_locale=no])

AS_IF([test "x$with_working_locale" = "xyes"],
  [AC_DEFINE([LOG4CPLUS_WORKING_LOCALE], [1])],
  [])


dnl Check for single-threaded compilation
AC_ARG_ENABLE([threads],
  [AS_HELP_STRING([--enable-threads=yes/no],
    [Use this option to create a singled-threaded version of this library])],
[case "${enableval}" in
  yes) multi_threaded=true ;;
  no)  multi_threaded=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-threads) ;;
 esac],[multi_threaded=true])

if test x$multi_threaded = xtrue ; then
    CPPFLAGS="$CPPFLAGS -D_REENTRANT"
    ACX_PTHREAD([], 
      [AC_MSG_ERROR([Requested threads support but no therads were found.])])
    echo "****************************************"
    echo "Creating a multi-threaded library"
    echo "****************************************"
    CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
    CXXFLAGS="$CXXFLAGS $PTHREAD_CFLAGS"
    LIBS="$PTHREAD_LIBS $LIBS"
    AC_CHECK_LIB(rt, nanosleep)
else
    echo "****************************************"
    echo "Creating a single-threaded library"
    echo "****************************************"
    AC_DEFINE(LOG4CPLUS_SINGLE_THREADED, 1,
              [Define if this is a single-threaded library.])
fi
AM_CONDITIONAL(MULTI_THREADED, test x$multi_threaded = xtrue)

AH_BOTTOM([#include <log4cplus/helpers/thread-config.h>])
AH_BOTTOM([#include <log4cplus/helpers/os-config.h>])

AC_CONFIG_HEADERS([include/log4cplus/config.h])
AC_CONFIG_FILES([Makefile
           src/Makefile
           tests/Makefile
           tests/appender_test/Makefile
           tests/configandwatch_test/Makefile
           tests/customloglevel_test/Makefile
           tests/fileappender_test/Makefile
           tests/filter_test/Makefile
           tests/hierarchy_test/Makefile
           tests/loglog_test/Makefile
           tests/ndc_test/Makefile
           tests/ostream_test/Makefile
           tests/patternlayout_test/Makefile
           tests/performance_test/Makefile
           tests/priority_test/Makefile
	   tests/propertyconfig_test/Makefile
	   tests/socket_test/Makefile
           tests/thread_test/Makefile])
AC_OUTPUT
